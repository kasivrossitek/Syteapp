var fs = require('fs');
var path = require('path');
var csv = require('csv-parser');
var Firebase = require('firebase');
var configyaspas = require('../configyaspas');

//Create reference to Firebase
var yasPassref = new Firebase(configyaspas.yasPasRoot);

// All Sytes are under /yaspas with autogenerated key per entry
var stream = csv({
    separator: ',',
    newline: '\r\n'
});

function usage() {
    var argv = process.argv;
    console.log("\nUsage: " + path.basename(argv[0]) + " " + path.basename(argv[1]) + " <csv file name>");
};

if (process.argv.length < 3) {
    console.log("Need minimum 3 arguments");
    usage();
    process.exit(0);
}

//Create input stream
var input = fs.createReadStream(process.argv[2]);

//Helper function to trim and return value
function getData(data) {
    if(data)
        return data.trim();
    else
        return data;
}

//This function validates the inputs and pushes data to Firebase.
function validateAndImport(data) {
    //Make sure at least name and address exists
    var name = getData(data['name']);
    var addr1 = getData(data['streetAddress1']);
    var city = getData(data['city']);
    var country = getData(data['country']);
    var state = getData(data['state']);
    var cat = getData(data['category']);

    if(!name || !addr1 || !city || !country || !state || !cat) {
        console.log('Invalid data, ignoring...');
    } else {
        console.log('Importing: ');
        console.log(data);

        //Push each row from the input csv
        yasPassref.push(data, function(error) {
           if(error) console.log('Error in push: ' + error);
        });
    }
}

//The input file must have first row with the exact attribute names
//There is no validation on the names.
input.pipe(stream).on('data', function(data) {
    validateAndImport(data);
});
